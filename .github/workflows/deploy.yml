---
name: Deploy to Production

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run at midnight every day

# Add permissions needed for GitHub token
permissions:
  contents: read
  pull-requests: write
  deployments: write
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Install Dependencies
        run: |
          cd frontend
          npm install
          
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
          
      - name: Deploy to Netlify
        id: netlify
        run: |
          cd frontend
          npx netlify-cli deploy --prod
        continue-on-error: true
          
      - name: Send Netlify Deployment Status
        if: always()
        run: |
          if [ "${{ steps.netlify.outcome }}" == "success" ]; then
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "@buzz2remote",
              "text": "🌐 Netlify Deployment\n\n✅ Status: Success\n🔗 Site: https://buzz2remote.netlify.app\n\nDeployment completed successfully! 🎉"
            }'
          else
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "@buzz2remote",
              "text": "🌐 Netlify Deployment\n\n❌ Status: Failed\n\nDeployment failed. Please check the GitHub Actions logs for details."
            }'
          fi
          
      - name: Deploy to Render via webhook
        id: render-deploy
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          DEPLOY_STATUS="skipped"
          
          if [ -n "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "Deploying to Render via webhook..."
            if curl -X POST "$RENDER_DEPLOY_HOOK_URL" -f; then
              echo "Render webhook deployment triggered successfully"
              DEPLOY_STATUS="success"
            else
              echo "Render webhook deployment failed"
              DEPLOY_STATUS="failed"
            fi
          elif [ -n "$RENDER_SERVICE_ID" ] && [ -n "$RENDER_API_KEY" ]; then
            echo "Deploying to Render via API..."
            if curl -X POST \
              -H "Authorization: Bearer $RENDER_API_KEY" \
              -H "Content-Type: application/json" \
              -f \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys"; then
              echo "Render API deployment triggered successfully"
              DEPLOY_STATUS="success"
            else
              echo "Render API deployment failed"
              DEPLOY_STATUS="failed"
            fi
          else
            echo "No Render deployment configuration found. Skipping Render deployment."
          fi
          
          echo "deploy_status=${DEPLOY_STATUS}" >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Send Render Deployment Status
        if: always()
        run: |
          DEPLOY_STATUS="${{ steps.render-deploy.outputs.deploy_status || 'failed' }}"
          if [ "$DEPLOY_STATUS" == "success" ]; then
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "@buzz2remote",
              "text": "🚀 Render Deployment\n\n✅ Status: Success\n🔗 Site: https://buzz2remote.onrender.com\n\nDeployment completed successfully! 🎉"
            }'
          elif [ "$DEPLOY_STATUS" == "failed" ]; then
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "@buzz2remote",
              "text": "🚀 Render Deployment\n\n❌ Status: Failed\n\nDeployment failed. Please check the GitHub Actions logs for details."
            }'
          else
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "@buzz2remote",
              "text": "🚀 Render Deployment\n\n⚠️ Status: Skipped\n\nNo Render deployment configuration found."
            }'
          fi

      - name: Send GitHub Deployment Status
        if: always()
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B | sed 's/"/\\"/g')
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{
            \"chat_id\": \"@buzz2remote\",
            \"text\": \"📦 GitHub Deployment\n\n✅ Status: Success\n🔗 Commit: ${COMMIT_HASH}\n📝 Message: ${COMMIT_MSG}\n⏰ Time: ${TIMESTAMP}\n\nDeployment completed successfully! 🎉\"
          }" 