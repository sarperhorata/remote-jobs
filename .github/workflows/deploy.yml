name: Deploy

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Her gün gece yarısı

# Add permissions needed for GitHub token
permissions:
  contents: read
  pull-requests: write
  deployments: write
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper deployments
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install Dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './frontend/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
      # Deploy to Render using webhook
      - name: Deploy to Render via webhook
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "Deploying to Render via webhook..."
            curl -X POST $RENDER_DEPLOY_HOOK_URL -f
          elif [ -n "$RENDER_SERVICE_ID" ] && [ -n "$RENDER_API_KEY" ]; then
            echo "Deploying to Render via API..."
            curl -X POST \
              -H "Authorization: Bearer $RENDER_API_KEY" \
              -H "Content-Type: application/json" \
              -f \
              https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
          else
            echo "No Render deployment configuration found. Skipping Render deployment."
            # Exit success even if no config exists
            exit 0
          fi
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} 